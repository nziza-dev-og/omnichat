
"use client";
import React, { useState } from 'react';
import ChatInterface from '@/components/chat/ChatInterface';
import PlaygroundArea, { PlaygroundContentType } from '@/components/chat/PlaygroundArea';
import { cn } from '@/lib/utils';

export default function Home() {
  const [playgroundTitle, setPlaygroundTitle] = useState("Code Playground");
  const [playgroundContent, setPlaygroundContent] = useState("Code generated by OmniAssist will appear here.");
  const [playgroundContentType, setPlaygroundContentType] = useState<PlaygroundContentType>('welcome');
  const [showPlayground, setShowPlayground] = useState(false);

  const handleContentGenerated = (content: string, type: PlaygroundContentType, title: string) => {
    if (type === 'code') {
      setPlaygroundTitle(title);
      setPlaygroundContent(content); // Raw code for the playground
      setPlaygroundContentType(type);
      setShowPlayground(true);
    } else {
      // For 'text', 'image', 'welcome', or any other type, hide the playground.
      setShowPlayground(false);
      // Optionally, reset playground to initial state if you want it cleared
      // when non-code content is generated.
      // setPlaygroundTitle("Code Playground");
      // setPlaygroundContent("Code generated by OmniAssist will appear here.");
      // setPlaygroundContentType('welcome');
    }
  };

  return (
    <div className="flex flex-1 overflow-hidden h-full">
      {/* Left Panel: Chat Interface */}
      <div className={cn(
        "flex flex-col h-full border-r bg-card overflow-hidden transition-all duration-300 ease-in-out",
        showPlayground ? "w-full md:w-2/5 lg:w-1/3" : "w-full"
      )}>
        <ChatInterface onContentGenerated={handleContentGenerated} />
      </div>

      {/* Right Panel: Playground Area - Conditionally Rendered */}
      {showPlayground && (
        <div className="hidden md:flex md:w-3/5 lg:w-2/3 flex-col h-full bg-background overflow-hidden transition-all duration-300 ease-in-out">
          <PlaygroundArea
            title={playgroundTitle}
            content={playgroundContent} // This will be the raw code
            contentType={playgroundContentType} // This will be 'code'
          />
        </div>
      )}
    </div>
  );
}
